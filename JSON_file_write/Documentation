Here, JSON file is created and the required object is written into the JSON file using C++.

For handling JSON file in C++ we are in need of special libraries such as json.h, boost/parse_tree, RapidJSON and so on..

Among the above, I used rapidjson library here. The following is the about the RapidJSON.

	- RapidJSON is a JSON parser and generator for C++. It was inspired by RapidXml.
	- RapidJSON is small but complete. It supports both SAX and DOM style API. The SAX parser is only a half thousand lines of code.
	- RapidJSON is fast. Its performance can be comparable to strlen(). It also optionally supports SSE2/SSE4.2 for acceleration.
	- RapidJSON is self-contained and header-only. It does not depend on external libraries such as BOOST. It even does not depend on STL.
	- RapidJSON is memory-friendly. Each JSON value occupies exactly 16 bytes for most 32/64-bit machines (excluding text string). By default it uses a fast memory allocator, and 			the parser allocates memory compactly during parsing.
	- RapidJSON is Unicode-friendly. It supports UTF-8, UTF-16, UTF-32 (LE & BE), and their detection, validation and transcoding internally.
